# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AggregatedWord {
  _id: ObjectId!
  difficulty: String!
  optional: OptionalAggregatedWord!
  user: User!
  word: Word!
}

input AggregatedWordInput {
  difficulty: String
  id: ObjectId
  repeat: Boolean
  title: String
  word: ObjectId
}

input AuthInput {
  avatar: String
  email: String!
  name: String
  password: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input EditUserInput {
  avatar: String
  email: String
  name: String
}

type Mutation {
  createAggregatedWord(input: AggregatedWordInput!): AggregatedWord!
  createUserWord(input: UserWordInput!): UserWord!
  deleteAggregatedWord(aggregatedWordId: ObjectId!): Boolean!
  deleteSettings(settingId: ObjectId!): Boolean!
  deleteStatistic(statisticId: ObjectId!): Boolean!
  deleteUser(userId: ObjectId!): Boolean!
  deleteUserWord(userWordId: ObjectId!): Boolean!
  editAggregatedWord(input: AggregatedWordInput!): AggregatedWord!
  editSettings(input: SettingsInput!): Settings!
  editStatistic(input: StatisticInput!): Statistic!
  editUser(input: EditUserInput!): User!
  editUserWord(input: UserWordInput!): UserWord!
  login(input: AuthInput!): UserResponse!
  register(input: AuthInput!): UserResponse!
}

"""Mongo object id scalar type"""
scalar ObjectId

type OptionalAggregatedWord {
  repeat: Boolean!
  title: String!
}

type OptionalSettings {
  description: String
  title: String
}

type OptionalStatistic {
  description: String
  title: String
}

type OptionalUserWord {
  repeat: Boolean!
  title: String!
}

type Query {
  aggregatedWord(aggregatedWordId: ObjectId!): AggregatedWord
  allAggregatedWords: [AggregatedWord!]
  allUserWords: [UserWord!]
  allWords: [Word!]
  currentUser: User
  settings: Settings
  statistic: Statistic
  user(userId: ObjectId!): User
  userWord(userWordId: ObjectId!): UserWord
  word(wordId: ObjectId!): Word
  words(input: WordInput!): [Word!]
}

type Settings {
  _id: ObjectId!
  optional: OptionalSettings!
  user: User!
  wordsPerDay: Float!
}

input SettingsInput {
  description: String
  id: ObjectId
  title: String
  wordsPerDay: Float
}

type Statistic {
  _id: ObjectId!
  learnedWords: Float!
  optional: OptionalStatistic!
  user: User!
}

input StatisticInput {
  description: String
  id: ObjectId
  learnedWords: Float
  title: String
}

type User {
  _id: ObjectId!
  avatar: String!
  email: String!
  name: String!
  password: String!
  registrationDate: DateTime!
  role: String!
}

type UserResponse {
  token: String
  user: User
}

type UserWord {
  _id: ObjectId!
  difficulty: String!
  optional: OptionalUserWord!
  user: User!
  word: Word!
}

input UserWordInput {
  difficulty: String
  id: ObjectId
  repeat: Boolean
  title: String
  word: ObjectId
}

type Word {
  _id: ObjectId!
  audio: String!
  audioExample: String!
  audioMeaning: String!
  group: Float!
  image: String!
  page: Float!
  textExample: String!
  textExampleTranslate: String!
  textMeaning: String!
  textMeaningTranslate: String!
  transcription: String!
  v: Float!
  word: String!
  wordTranslate: String!
}

input WordInput {
  group: Float
  page: Float
}
